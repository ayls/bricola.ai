trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
stages:  
- stage: build
  jobs:
  - job: build
    displayName: Build
    steps:
    - task: Npm@1
      displayName: npm install
      inputs:
        workingDir: web
        verbose: false
    - task: Npm@1
      displayName: npm build
      inputs:
        command: custom
        workingDir: web
        verbose: false
        customCommand: run build
    - task: CopyFiles@2
      displayName: 'copy web files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: web/dist
        TargetFolder: $(Build.ArtifactStagingDirectory)/web
        CleanTargetFolder: true
    - task: CopyFiles@2
      displayName: 'copy API files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: api/azure_functions
        TargetFolder: $(Build.ArtifactStagingDirectory)/api
        CleanTargetFolder: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
- stage: deploy
  jobs:
  - deployment: deploy  
    displayName: 'Deploy'
    environment: 'BriscolaAI'    
    strategy:
      runOnce:
        deploy:    
          # assuming the storage account and azure functions app already exist
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: deploy api
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure'
              appType: 'webAppLinux'
              WebAppName: '$(API_FUNCTIONS_NAME)'
              packageForLinux: '$$(Agent.BuildDirectory)/drop/api'
              RuntimeStack: 'PYTHON|3.6'            
          - task: kasunkodagoda.regex-match-replace.regex-match-replace.RegExMatchReplace@2
            displayName: RegEx match & replace
            inputs:
              PathToFile: $(Agent.BuildDirectory)/drop/web/index.html
              RegEx: '"baseUrl":"http://localhost:5000"'
              ValueToReplace: '"baseUrl":"$(API_BASE_URL)"'
          - task: AzureCLI@1
            displayName: clean web storage container
            inputs:
              azureSubscription: '$(AZURE_SUBSCRIPTION)'
              scriptLocation: inlineScript
              inlineScript: az storage blob delete-batch --account-name $(STORAGE_ACCOUNT_NAME) -s \$web
          - task: AzureCLI@1
            displayName: deploy to web storage container
            inputs:
              azureSubscription: '$(AZURE_SUBSCRIPTION)'
              scriptLocation: inlineScript
              inlineScript: az storage blob upload-batch --account-name $(STORAGE_ACCOUNT_NAME) -s . -d \$web
              workingDirectory: $(Agent.BuildDirectory)/drop/web

